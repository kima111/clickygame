{"version":3,"sources":["images/background.jpg","components/Card.js","components/gameboard.js","components/nomatch.js","components/main.js","App.js","index.js"],"names":["module","exports","styles","transparentCard","backgroundColor","borderWidth","borderStyle","borderColor","width","margin","display","Card","props","type","picked","style","src","image","value","title","alt","onMouseUp","handleIncrement","className","alreadyPicked","status","counting","highScore","heading","color","textDecoration","tagline","marginLeft","marginTop","button","button2","center","borderRadius","opacity","height","fontSize","GameBoard","state","count","name","event","preventDefault","target","i","length","console","log","setState","push","shuffledCards","array","j","Math","floor","random","temp","shuffleArray","Cards","this","map","format","description","projectURL","githuborheroku","Component","NoMatch","role","aria-label","background","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","h1","fontWeight","textShadow","main","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f73c3027.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.195cd523.jpg\";","import React from 'react';\r\nimport \"./index.scss\";\r\n\r\n\r\nconst styles={\r\n\r\n    transparentCard:{\r\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n        borderWidth: \"5px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"white\",\r\n        width: \"170px\",\r\n      \r\n        margin: \"15px\",\r\n        display: \"inline-block\"\r\n    }\r\n        \r\n}\r\nfunction Card(props) {\r\n\r\n        return (\r\n            <div>\r\n   \r\n                   <input type=\"image\" picked=\"not_picked\" style={styles.transparentCard} src={props.image} value={props.title}  alt=\"placeholder\" onMouseUp={props.handleIncrement} className=\"card card-img-top\" />\r\n         \r\n            </div>\r\n            )\r\n            }\r\n        \r\nexport default Card;","import React, { Component } from 'react'\r\nimport \"./index.scss\";\r\nimport Card from './Card';\r\nimport Cards from \"./cards.json\";\r\n\r\n\r\nimport \"./index.scss\";\r\n\r\n\r\n\r\nvar alreadyPicked = [];\r\nvar status = \"Not yet started\"\r\nvar counting =0;\r\nvar highScore = 0;\r\nconst styles = {\r\n  \r\n    heading:{\r\n   \r\n        color: \"white\",\r\n        textDecoration: \"none\"\r\n        \r\n    },\r\n    tagline:{\r\n  \r\n        marginLeft: \"5px\",\r\n        marginTop: \"-10px\"\r\n    },\r\n    button:{\r\n        marginLeft: \"-8px\"\r\n     \r\n    }, \r\n    button2:{\r\n        marginLeft: \"5px\"\r\n    },\r\n    center: {\r\n\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"5px\",\r\n        borderRadius: \"5px\",\r\n        opacity: \"1\",\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,.7)\",\r\n        height:\"100%\",\r\n       \r\n    },\r\n    fontSize: {\r\n     \r\n        display: \"inline-block\",\r\n        fontSize: \"25px\"\r\n   \r\n    }\r\n\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n    let i = array.length - 1;\r\n    for (; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\n\r\n\r\nclass GameBoard extends Component{\r\n\r\n    state={\r\n        count: 0,\r\n        name: \"\",\r\n\r\n    }\r\n\r\n    handleIncrement = event => {\r\n        event.preventDefault();\r\n        var {value } = event.target;\r\n\r\n   \r\n        for(let i=0;i<alreadyPicked.length;i++){\r\n        //check for value in the array if found then reset status\r\n        if(value===alreadyPicked[i]){\r\n            console.log(\"worked\")\r\n            alreadyPicked = []\r\n            status = \"lose\"\r\n            counting = 0\r\n            this.setState({\r\n                count: 0\r\n            })\r\n\r\n        } \r\n        }\r\n        if (status !== \"lose\"){\r\n            alreadyPicked.push(value)\r\n            status = \"winning\"\r\n           \r\n            if(highScore === counting){\r\n            highScore ++\r\n            }\r\n            counting ++\r\n            this.setState({\r\n          \r\n                count: this.state.count + 1,\r\n          \r\n              });\r\n         \r\n        }else{\r\n            status=\"Start again\"\r\n        }\r\n       \r\n      console.log(alreadyPicked)\r\n    }\r\n\r\n \r\n    render(){\r\n\r\n        const shuffledCards = shuffleArray(Cards)\r\n        return (\r\n\r\n            <div>\r\n                   \r\n           <h1 style={styles.fontSize}>Clicky Game </h1><h2 style={styles.fontSize}> &nbsp;| Status: {status}</h2><h2 style={styles.fontSize}> &nbsp;| Points: {this.state.count}</h2><h2 style={styles.fontSize}> &nbsp;| High Score: {highScore}</h2>\r\n        \r\n       \r\n   \r\n                <div className=\"fadeUp\" style={styles.center}>\r\n                <div className=\"row\">\r\n                {shuffledCards.map(Cards => (\r\n                    <div className={Cards.format}>\r\n                    <Card\r\n                    value={Cards.title}\r\n               \r\n                    image={Cards.src}\r\n                    title={Cards.title}\r\n                    description={Cards.description}\r\n                    projectURL={Cards.projectURL}\r\n                    githuborheroku={Cards.githuborheroku}\r\n                    handleIncrement={this.handleIncrement}\r\n                    />\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                </div>\r\n              \r\n               \r\n            </div>\r\n           \r\n        )\r\n                }\r\n    }\r\nexport default GameBoard;","import React from \"react\";\r\n\r\n\r\nfunction NoMatch() {\r\n  return (\r\n \r\n        <div>\r\n            <h1>Oh no 404 Page Not Found!</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                ðŸ™„\r\n              </span>\r\n            </h1>\r\n        </div>\r\n \r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    Switch,\r\n    Redirect,\r\n    useLocation\r\n  } from \"react-router-dom\";\r\nimport background from \"../images/background.jpg\";\r\nimport GameBoard from \"../components/gameboard\";\r\nimport NoMatch from \"./nomatch\";\r\nconst styles = {  \r\nbackground: {\r\n    backgroundImage: `url(${background})`,\r\n    color: \"white\",\r\n    height: \"100vh\",\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n},\r\nh1:{\r\n    fontWeight: \"500\",\r\n    color: \"white\",\r\n    textShadow: \" 0 2px black\"\r\n}\r\n}\r\nexport default function main() {\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div style={styles.background}>\r\n           <div className=\"container\">\r\n           <Router>\r\n         \r\n         \r\n              \r\n               <Switch>\r\n               <Route exact path=\"/\" component={this}/>\r\n       \r\n              \r\n\r\n               <Route component={NoMatch} />\r\n               </Switch>\r\n           </Router>\r\n           <GameBoard/>\r\n           </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\nimport Main from \"./components/main\";\nimport GameBoard from \"./components/gameboard\";\n\nfunction App() {\n  return (\n  <div>\n    <Main />\n  </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}