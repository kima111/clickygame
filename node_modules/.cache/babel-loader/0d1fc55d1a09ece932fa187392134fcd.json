{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akim\\\\Desktop\\\\Coding\\\\Assignment15\\\\Clicky-Game\\\\clicky-game\\\\src\\\\components\\\\gameboard.js\";\nimport React, { Component } from 'react';\nimport \"./index.scss\";\nimport Card from './Card';\nimport Cards from \"./cards.json\";\nimport \"./index.scss\";\nconst styles = {\n  heading: {\n    color: \"white\",\n    textDecoration: \"none\"\n  },\n  tagline: {\n    marginLeft: \"5px\",\n    marginTop: \"-10px\"\n  },\n  button: {\n    marginLeft: \"-8px\"\n  },\n  button2: {\n    marginLeft: \"5px\"\n  },\n  center: {\n    borderStyle: \"solid\",\n    borderWidth: \"5px\",\n    borderRadius: \"5px\",\n    opacity: \"1\",\n    color: \"white\",\n    backgroundColor: \"rgba(0,0,0,.7)\",\n    height: \"100%\"\n  },\n  fontSize: {\n    fontSize: \"0.9rem\",\n    marginTop: \"15px\"\n  }\n};\n\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\nclass GameBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      name: \"\",\n      status: \"not yet started\"\n    };\n\n    this.handleIncrement = event => {\n      const value = event.target.value; // Updating the input's state\n\n      this.setState({\n        name: value,\n        count: this.state.count + 1,\n        status: \"winning\"\n      });\n\n      if (value === this.state.name) {\n        console.log(\"worked\");\n        this.setState({\n          name: \"\",\n          status: \"lose\",\n          count: 0\n        });\n      }\n    };\n  }\n\n  render() {\n    const shuffledCards = shuffleArray(Cards);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Clicky Game Points: \", this.state.count), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" Status: \", this.state.status), React.createElement(\"div\", {\n      className: \"fadeUp\",\n      style: styles.center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, shuffledCards.map(Cards => React.createElement(\"div\", {\n      className: Cards.format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Card, {\n      value: Cards.title,\n      picked: \"picked\",\n      image: Cards.src,\n      title: Cards.title,\n      description: Cards.description,\n      projectURL: Cards.projectURL,\n      githuborheroku: Cards.githuborheroku,\n      handleIncrement: this.handleIncrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["C:/Users/akim/Desktop/Coding/Assignment15/Clicky-Game/clicky-game/src/components/gameboard.js"],"names":["React","Component","Card","Cards","styles","heading","color","textDecoration","tagline","marginLeft","marginTop","button","button2","center","borderStyle","borderWidth","borderRadius","opacity","backgroundColor","height","fontSize","shuffleArray","array","i","length","j","Math","floor","random","temp","GameBoard","state","count","name","status","handleIncrement","event","value","target","setState","console","log","render","shuffledCards","map","format","title","src","description","projectURL","githuborheroku"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./index.scss\";\r\nimport Card from './Card';\r\nimport Cards from \"./cards.json\";\r\n\r\n\r\nimport \"./index.scss\";\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n  \r\n    heading:{\r\n   \r\n        color: \"white\",\r\n        textDecoration: \"none\"\r\n        \r\n    },\r\n    \r\n    tagline:{\r\n  \r\n        marginLeft: \"5px\",\r\n        marginTop: \"-10px\"\r\n    },\r\n    button:{\r\n        marginLeft: \"-8px\"\r\n     \r\n    }, \r\n    button2:{\r\n        marginLeft: \"5px\"\r\n    },\r\n\r\n    \r\n\r\n\r\n\r\n    center: {\r\n\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"5px\",\r\n        borderRadius: \"5px\",\r\n        opacity: \"1\",\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,.7)\",\r\n  \r\n\r\n        height:\"100%\",\r\n       \r\n    },\r\n    fontSize: {\r\n        fontSize: \"0.9rem\",\r\n        marginTop: \"15px\"\r\n    }\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n    let i = array.length - 1;\r\n    for (; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\nclass GameBoard extends Component{\r\n\r\n    state={\r\n        count: 0,\r\n        name: \"\",\r\n        status: \"not yet started\"\r\n    }\r\n\r\n    handleIncrement = event => {\r\n        const { value } = event.target;\r\n\r\n\r\n        // Updating the input's state\r\n        this.setState({\r\n          name: value,\r\n          count: this.state.count + 1,\r\n          status: \"winning\"\r\n        });\r\n        if(value===this.state.name){\r\n            console.log(\"worked\")\r\n        \r\n            this.setState({\r\n                name: \"\",\r\n                status: \"lose\",\r\n                count: 0\r\n                \r\n            });\r\n        }\r\n\r\n    }\r\n\r\n \r\n    render(){\r\n\r\n        const shuffledCards = shuffleArray(Cards)\r\n        return (\r\n\r\n            <div>\r\n                   \r\n           <h1>Clicky Game Points: {this.state.count}</h1><h2> Status: {this.state.status}</h2>\r\n        \r\n       \r\n   \r\n                <div className=\"fadeUp\" style={styles.center}>\r\n                <div className=\"row\">\r\n                {shuffledCards.map(Cards => (\r\n                    <div className={Cards.format}>\r\n                    <Card\r\n                    value={Cards.title}\r\n                    picked=\"picked\"\r\n                    image={Cards.src}\r\n                    title={Cards.title}\r\n                    description={Cards.description}\r\n                    projectURL={Cards.projectURL}\r\n                    githuborheroku={Cards.githuborheroku}\r\n                    handleIncrement={this.handleIncrement}\r\n                    />\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                </div>\r\n              \r\n               \r\n            </div>\r\n           \r\n        )\r\n                }\r\n    }\r\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}