{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akim\\\\Desktop\\\\Coding\\\\Assignment15\\\\Clicky-Game\\\\clicky-game\\\\src\\\\components\\\\gameboard.js\";\nimport React, { Component } from 'react';\nimport \"./index.scss\";\nimport Card from './Card';\nimport Cards from \"./cards.json\";\nimport background from \"../images/background.jpg\";\nimport \"./index.scss\";\nconst styles = {\n  background: {\n    backgroundImage: `url(${background})`,\n    color: \"white\",\n    height: \"100vh\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\"\n  },\n  heading: {\n    color: \"white\",\n    textDecoration: \"none\"\n  },\n  tagline: {\n    marginLeft: \"5px\",\n    marginTop: \"-10px\"\n  },\n  button: {\n    marginLeft: \"-8px\"\n  },\n  button2: {\n    marginLeft: \"5px\"\n  },\n  center: {\n    borderStyle: \"solid\",\n    borderWidth: \"5px\",\n    borderRadius: \"5px\",\n    opacity: \"1\",\n    color: \"white\",\n    backgroundColor: \"rgba(0,0,0,.7)\",\n    height: \"100%\"\n  },\n  fontSize: {\n    fontSize: \"0.9rem\",\n    marginTop: \"15px\"\n  }\n};\n\nclass GameBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      name: \"\"\n    };\n\n    this.handleIncrement = event => {\n      const value = event.target.value; // Updating the input's state\n\n      this.setState({\n        name: value,\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fadeUp\",\n      style: styles.center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, Cards.map(Cards => React.createElement(\"div\", {\n      className: Cards.format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: Cards.title,\n      image: Cards.src,\n      title: Cards.title,\n      description: Cards.description,\n      projectURL: Cards.projectURL,\n      githuborheroku: Cards.githuborheroku,\n      handleIncrement: this.handleIncrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["C:/Users/akim/Desktop/Coding/Assignment15/Clicky-Game/clicky-game/src/components/gameboard.js"],"names":["React","Component","Card","Cards","background","styles","backgroundImage","color","height","backgroundPosition","backgroundRepeat","backgroundSize","heading","textDecoration","tagline","marginLeft","marginTop","button","button2","center","borderStyle","borderWidth","borderRadius","opacity","backgroundColor","fontSize","GameBoard","state","count","name","handleIncrement","event","value","target","setState","render","map","format","title","src","description","projectURL","githuborheroku"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./index.scss\";\r\nimport Card from './Card';\r\nimport Cards from \"./cards.json\";\r\n\r\nimport background from \"../images/background.jpg\";\r\nimport \"./index.scss\";\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    background: {\r\n        backgroundImage: `url(${background})`,\r\n        color: \"white\",\r\n        height: \"100vh\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n    },\r\n    heading:{\r\n   \r\n        color: \"white\",\r\n        textDecoration: \"none\"\r\n        \r\n    },\r\n    \r\n    tagline:{\r\n  \r\n        marginLeft: \"5px\",\r\n        marginTop: \"-10px\"\r\n    },\r\n    button:{\r\n        marginLeft: \"-8px\"\r\n     \r\n    }, \r\n    button2:{\r\n        marginLeft: \"5px\"\r\n    },\r\n\r\n    \r\n\r\n\r\n\r\n    center: {\r\n\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"5px\",\r\n        borderRadius: \"5px\",\r\n        opacity: \"1\",\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,.7)\",\r\n  \r\n\r\n        height:\"100%\",\r\n       \r\n    },\r\n    fontSize: {\r\n        fontSize: \"0.9rem\",\r\n        marginTop: \"15px\"\r\n    }\r\n}\r\nclass GameBoard extends Component{\r\n\r\n    state={\r\n        count: 0,\r\n        name: \"\",\r\n    }\r\n\r\n    handleIncrement = event => {\r\n        const { value } = event.target;\r\n\r\n        // Updating the input's state\r\n        this.setState({\r\n          name: value,\r\n          count: this.state.count + 1\r\n        });\r\n\r\n    }\r\n    render(){\r\n\r\n \r\n        return (\r\n\r\n            <div>\r\n                   <div style={styles.background}>\r\n           \r\n        \r\n       \r\n   \r\n                <div className=\"fadeUp\" style={styles.center}>\r\n                <div className=\"row\">\r\n                {Cards.map(Cards => (\r\n                    <div className={Cards.format}>\r\n                    <Card\r\n                    name={Cards.title}\r\n                    image={Cards.src}\r\n                    title={Cards.title}\r\n                    description={Cards.description}\r\n                    projectURL={Cards.projectURL}\r\n                    githuborheroku={Cards.githuborheroku}\r\n                    handleIncrement={this.handleIncrement}\r\n                    />\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                </div>\r\n              \r\n               \r\n            </div>\r\n            </div>\r\n        )\r\n                }\r\n    }\r\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}