{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\akim\\\\Desktop\\\\Coding\\\\Assignment15\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\akim\\\\Desktop\\\\Coding\\\\Assignment15\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\akim\\\\Desktop\\\\Coding\\\\Assignment15\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\akim\\\\Desktop\\\\Coding\\\\Assignment15\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\akim\\\\Desktop\\\\Coding\\\\Assignment15\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import\"./index.scss\";import Card from'./Card';import Cards from\"./cards.json\";import\"./index.scss\";var alreadyPicked=[];var status=\"Not yet started\";var counting=0;var highScore=0;var styles={heading:{color:\"white\",textDecoration:\"none\"},tagline:{marginLeft:\"5px\",marginTop:\"-10px\"},button:{marginLeft:\"-8px\"},button2:{marginLeft:\"5px\"},center:{borderStyle:\"solid\",borderWidth:\"5px\",borderRadius:\"5px\",opacity:\"1\",color:\"white\",backgroundColor:\"rgba(0,0,0,.7)\",height:\"100%\"},fontSize:{display:\"inline-block\",fontSize:\"25px\"}};function shuffleArray(array){var i=array.length-1;for(;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array;}var GameBoard=/*#__PURE__*/function(_Component){_inherits(GameBoard,_Component);function GameBoard(){var _getPrototypeOf2;var _this;_classCallCheck(this,GameBoard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(GameBoard)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={count:0,name:\"\"};_this.handleIncrement=function(event){event.preventDefault();var value=event.target.value;for(var i=0;i<alreadyPicked.length;i++){//check for value in the array if found then reset status\nif(value===alreadyPicked[i]){console.log(\"worked\");alreadyPicked=[];status=\"lose\";counting=0;_this.setState({count:0});}}if(status!==\"lose\"){alreadyPicked.push(value);status=\"winning\";if(highScore===counting){highScore++;}counting++;_this.setState({count:_this.state.count+1});}else{status=\"Start again\";}console.log(alreadyPicked);};return _this;}_createClass(GameBoard,[{key:\"render\",value:function render(){var _this2=this;var shuffledCards=shuffleArray(Cards);return React.createElement(\"div\",null,React.createElement(\"h1\",{style:styles.fontSize},\"Clicky Game \"),React.createElement(\"h2\",{style:styles.fontSize},\" \\xA0| Status: \",status),React.createElement(\"h2\",{style:styles.fontSize},\" \\xA0| Points: \",this.state.count),React.createElement(\"h2\",{style:styles.fontSize},\" \\xA0| High Score: \",highScore),React.createElement(\"div\",{className:\"fadeUp\",style:styles.center},React.createElement(\"div\",{className:\"row\"},shuffledCards.map(function(Cards){return React.createElement(\"div\",{className:Cards.format},React.createElement(Card,{value:Cards.title,image:Cards.src,title:Cards.title,description:Cards.description,projectURL:Cards.projectURL,githuborheroku:Cards.githuborheroku,handleIncrement:_this2.handleIncrement}));}))));}}]);return GameBoard;}(Component);export default GameBoard;","map":{"version":3,"sources":["C:/Users/akim/Desktop/Coding/Assignment15/Clicky-Game/clicky-game/src/components/gameboard.js"],"names":["React","Component","Card","Cards","alreadyPicked","status","counting","highScore","styles","heading","color","textDecoration","tagline","marginLeft","marginTop","button","button2","center","borderStyle","borderWidth","borderRadius","opacity","backgroundColor","height","fontSize","display","shuffleArray","array","i","length","j","Math","floor","random","temp","GameBoard","state","count","name","handleIncrement","event","preventDefault","value","target","console","log","setState","push","shuffledCards","map","format","title","src","description","projectURL","githuborheroku"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./index.scss\";\r\nimport Card from './Card';\r\nimport Cards from \"./cards.json\";\r\n\r\n\r\nimport \"./index.scss\";\r\n\r\n\r\n\r\nvar alreadyPicked = [];\r\nvar status = \"Not yet started\"\r\nvar counting =0;\r\nvar highScore = 0;\r\nconst styles = {\r\n  \r\n    heading:{\r\n   \r\n        color: \"white\",\r\n        textDecoration: \"none\"\r\n        \r\n    },\r\n    tagline:{\r\n  \r\n        marginLeft: \"5px\",\r\n        marginTop: \"-10px\"\r\n    },\r\n    button:{\r\n        marginLeft: \"-8px\"\r\n     \r\n    }, \r\n    button2:{\r\n        marginLeft: \"5px\"\r\n    },\r\n    center: {\r\n\r\n        borderStyle: \"solid\",\r\n        borderWidth: \"5px\",\r\n        borderRadius: \"5px\",\r\n        opacity: \"1\",\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(0,0,0,.7)\",\r\n        height:\"100%\",\r\n       \r\n    },\r\n    fontSize: {\r\n     \r\n        display: \"inline-block\",\r\n        fontSize: \"25px\"\r\n   \r\n    }\r\n\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n    let i = array.length - 1;\r\n    for (; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array;\r\n  }\r\n\r\n\r\nclass GameBoard extends Component{\r\n\r\n    state={\r\n        count: 0,\r\n        name: \"\",\r\n\r\n    }\r\n\r\n    handleIncrement = event => {\r\n        event.preventDefault();\r\n        var {value } = event.target;\r\n\r\n   \r\n        for(let i=0;i<alreadyPicked.length;i++){\r\n        //check for value in the array if found then reset status\r\n        if(value===alreadyPicked[i]){\r\n            console.log(\"worked\")\r\n            alreadyPicked = []\r\n            status = \"lose\"\r\n            counting = 0\r\n            this.setState({\r\n                count: 0\r\n            })\r\n\r\n        } \r\n        }\r\n        if (status !== \"lose\"){\r\n            alreadyPicked.push(value)\r\n            status = \"winning\"\r\n           \r\n            if(highScore === counting){\r\n            highScore ++\r\n            }\r\n            counting ++\r\n            this.setState({\r\n          \r\n                count: this.state.count + 1,\r\n          \r\n              });\r\n         \r\n        }else{\r\n            status=\"Start again\"\r\n        }\r\n       \r\n      console.log(alreadyPicked)\r\n    }\r\n\r\n \r\n    render(){\r\n\r\n        const shuffledCards = shuffleArray(Cards)\r\n        return (\r\n\r\n            <div>\r\n                   \r\n           <h1 style={styles.fontSize}>Clicky Game </h1><h2 style={styles.fontSize}> &nbsp;| Status: {status}</h2><h2 style={styles.fontSize}> &nbsp;| Points: {this.state.count}</h2><h2 style={styles.fontSize}> &nbsp;| High Score: {highScore}</h2>\r\n        \r\n       \r\n   \r\n                <div className=\"fadeUp\" style={styles.center}>\r\n                <div className=\"row\">\r\n                {shuffledCards.map(Cards => (\r\n                    <div className={Cards.format}>\r\n                    <Card\r\n                    value={Cards.title}\r\n               \r\n                    image={Cards.src}\r\n                    title={Cards.title}\r\n                    description={Cards.description}\r\n                    projectURL={Cards.projectURL}\r\n                    githuborheroku={Cards.githuborheroku}\r\n                    handleIncrement={this.handleIncrement}\r\n                    />\r\n                    </div>\r\n                ))}\r\n                </div>\r\n                </div>\r\n              \r\n               \r\n            </div>\r\n           \r\n        )\r\n                }\r\n    }\r\nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}